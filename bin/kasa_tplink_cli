#!/usr/bin/env bash
set -e
(( ${BASH_VERSION%%.*} < 4 )) && { echo "Need bash 4 or up but found $BASH_VERSION!" 1>&2; exit 1; }
get_token(){
    [ -z "$terminalUUID" ] && terminalUUID="$(uuidgen | head -c -1)"
    if [[ -z "$cloudUserName" || -z "$cloudPassword" ]]; then
        echo 'cloudUserName and cloudPassword are required to generate token!' 1>&2
        exit 1
    fi
    token="$(curl -s --header "Content-Type: application/json" --request POST --data '{"method": "login","params": { "appType": "Kasa_Android","cloudUserName": "'"$cloudUserName"'","cloudPassword": "'"$cloudPassword"'","terminalUUID": "'"$terminalUUID"'"}}' https://wap.tplinkcloud.com | jq -r '.result.token')"
}
get_deviceid(){
    deviceId="$(curl -s --request POST "https://wap.tplinkcloud.com?token=$token HTTP/1.1" --data '{"method":"getDeviceList"}' --header "Content-Type: application/json" | jq -r '.result.deviceList[] | select(.alias == "'"$1"'") | .deviceId')"
    if [ -z "$deviceId" ]; then
        echo "Device: \"$1\" was not found!" 1>&2
        exit 1
    fi
    echo -n "$deviceId"
}
start_stop_device(){
    curl -s --request POST "https://eu-wap.tplinkcloud.com/?token=$token HTTP/1.1" \
    --data '{"method":"passthrough", "params": {"deviceId": "'"$1"'", "requestData": "{\"system\":{\"set_relay_state\":{\"state\":'"$2"'}}}" }}' \
    --header "Content-Type: application/json" | jq -r '.result.responseData'
}
query_device(){
    curl -s --request POST "https://eu-wap.tplinkcloud.com/?token=$token HTTP/1.1" --data '{"method":"passthrough", "params": {"deviceId": "'"$1"'", "requestData": "{\"system\":{\"get_sysinfo\":null}}" }}' --header "Content-Type: application/json" | jq -r '.result.responseData' | jq
}
get_power_usage(){
    curl -s --request POST "https://eu-wap.tplinkcloud.com/?token=$token HTTP/1.1" --data '{"method":"passthrough", "params": {"deviceId": "'"$1"'", "requestData": "{\"emeter\":{\"get_realtime\":null}}" }}' --header "Content-Type: application/json" | jq -r '.result.responseData' | jq -r '.emeter.get_realtime.power' | awk '{print int($1)}'
}
list_devices(){
    curl -s --request POST "https://wap.tplinkcloud.com?token=$token HTTP/1.1" --data '{"method":"getDeviceList"}' --header "Content-Type: application/json"
}

source $HOME/.ssh/secrets/tplink_kasa.sh

# get token
[ -z "$token" ] && get_token

action=${1:-"power"}
device=${2:-"Rig 1"}
[ -z "${rigs["$device"]}" ] && rigs["$device"]="$(get_deviceid "$device")"

case $action in
  start) start_stop_device "${rigs["$device"]}" "1";;
  stop) start_stop_device "${rigs["$device"]}" "0";;
    restart)
        # stop device
        start_stop_device "${rigs["$device"]}" "0"
        # wait some time
        sleep 5
        # start device
        start_stop_device "${rigs["$device"]}" "1"
    ;;
  query) query_device "${rigs["$device"]}";;
    power) get_power_usage "${rigs["$device"]}";;
    list) list_devices;;
esac

